schemaVersion: 2.3.0
metadata:
  name: openwrt-helloworld
attributes:
  controller.devfile.io/storage-type: ephemeral
parent:
  uri: https://raw.githubusercontent.com/thepetk/registry/2e832cc98a931b1015079cb62b6332fe126076ee/stacks/test/devfile.yaml
projects:
  - name: openwrt-helloworld
    git:
      remotes:
        origin: https://github.com/che-incubator/openwrt-helloworld-package.git
  - name: openwrt
    zip:
      location: https://github.com/openwrt/openwrt/archive/refs/tags/v21.02.3.zip
commands:
  - id: installpackagedefinitions
    exec:
      label: Install all package definitions
      component: runtime
      workingDir: ${PROJECTS_ROOT}/openwrt
      commandLine: scripts/feeds update -a -f && scripts/feeds install -a -f
      group:
        kind: build
  - id: linkhelloworldpackage
    exec:
      label: Link helloworld package
      component: runtime
      workingDir: ${PROJECTS_ROOT}
      commandLine: ln -sr openwrt-helloworld/package/helloworld openwrt/package/
      group:
        kind: build
  - id: unlinkhelloworldpackage
    exec:
      label: Unlink helloworld package
      component: runtime
      workingDir: ${PROJECTS_ROOT}
      commandLine: unlink /projects/openwrt/package/helloworld
      group:
        kind: build
  - id: copyconfig
    exec:
      label: Copy diff-config to OpenWRT
      component: runtime
      workingDir: ${PROJECTS_ROOT}/openwrt-helloworld
      commandLine: scripts/copy-config.sh
      group:
        kind: build
  - id: savedifconfig
    exec:
      label: Save diff-config to openwrt-helloworld
      component: runtime
      workingDir: ${PROJECTS_ROOT}/openwrt
      commandLine: scripts/diffconfig.sh > /projects/openwrt-helloworld/configs/.x86-generic.config
      group:
        kind: build
  - id: buildhelloworldpackage
    exec:
      label: Build helloworld package
      component: runtime
      workingDir: ${PROJECTS_ROOT}/openwrt
      commandLine: make package/helloworld/compile V=s CONFIG_DEBUG=y
      group:
        kind: build
  - id: prebuiltresources
    exec:
      label: Add prebuilt resources
      component: runtime
      workingDir: ${PROJECTS_ROOT}/openwrt-helloworld
      commandLine: scripts/add-prebuilt-resources.sh
      group:
        kind: build
  - id: buildallpackages
    exec:
      label: Build all packages and the kernel
      component: runtime
      workingDir: ${PROJECTS_ROOT}/openwrt-helloworld
      commandLine: scripts/build.sh
      group:
        kind: build
  - id: qemustart
    exec:
      label: Running OpenWRT in a QEMU VM
      component: qemu
      workingDir: ${PROJECTS_ROOT}
      commandLine: /usr/local/bin/prepare-and-run-vm.sh
  - id: gdbsshstart
    exec:
      label: Start remote GDB Server
      component: runtime
      workingDir: ${PROJECTS_ROOT}/openwrt-helloworld
      commandLine: scripts/start-gdb-server.sh
  - id: gdbsshaccess
    exec:
      label: Remote access to OpenWRT via SSH
      component: runtime
      workingDir: ${PROJECTS_ROOT}/openwrt-helloworld
      commandLine: scripts/start-ssh.sh
      group:
        kind: build
  - id: serverstart
    exec:
      label: Start Http-Server
      component: runtime
      workingDir: ${PROJECTS_ROOT}/openwrt
      commandLine: npx http-server -a 0.0.0.0 -p 8080 -o bin/targets
      group:
        kind: build
# components:
#   - name: runtime
#     container:
#       image: docker.io/olexii4dockerid/openwrt-builder:next
#       memoryLimit: 6656Mi
#       memoryRequest: 512Mi
#       cpuLimit: 10000m
#       cpuRequest: 1000m
#       mountSources: true
#       endpoints:
#         - exposure: public
#           name: file-server
#           protocol: https
#           targetPort: 8080
#           path: /bin/targets
#   - name: qemu
#     container:
#       image: quay.io/che-incubator/openwrt-runner:latest
#       memoryLimit: 1536Mi
#       memoryRequest: 256Mi
#       cpuLimit: 1500m
#       cpuRequest: 500m
#       mountSources: true
#       env:
#         - name: KUBEDOCK_ENABLED
#           value: "true"
#       endpoints:
#         - exposure: public
#           name: luci
#           protocol: https
#           targetPort: 30080